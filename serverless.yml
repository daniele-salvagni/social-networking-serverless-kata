console: true
org: danielesalvagni
app: social-networking-serverless-kata
service: social-networking-serverless-kata
frameworkVersion: '3'

provider:
  name: aws
  region: eu-west-3
  runtime: nodejs14.x
  stage: dev
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-postTable-${sls:stage}
  httpApi:
    cors: true
  environment: # Environment variables (process.env. in JS)
    DYNAMODB_POST_TABLE: ${self:service}-postTable-${sls:stage}
    LOCAL_DDB_PORT: 8000

custom:
  stage: ${opt:stage, self:provider.stage}
  dynamodb:
    stages:
      - dev
    start:
      #docker: true
      port: 8000
      inMemory: true
      migrate: true
      #seed: true
    seed:
      domain:
        sources:
          - table: ${self:service}-postTable-${sls:stage}
            #sources: [./offline/migrations/todo-seed.json]



plugins:
  - serverless-dynamodb-local
  - serverless-offline

functions: ${file(http-api/gateway.yml)}

resources:
  Resources: ${file(database/post.yml)}

package:
  exclude:
    - node_modules/dynamodb-localhost/**
    - node_modules/serverless-dynamodb-local/**
    - node_modules/serverless-offline/**