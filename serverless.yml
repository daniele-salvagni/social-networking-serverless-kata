console: true
org: danielesalvagni
app: social-networking-serverless-kata
service: social-networking-serverless-kata
frameworkVersion: '3'

provider:
  name: aws
  region: eu-west-3
  runtime: nodejs14.x
  stage: dev
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-postTable-${sls:stage}
  environment: # Environment variables (process.env. in JS)
    DYNAMODB_POST_TABLE: ${self:service}-postTable-${sls:stage}

plugins:
  - serverless-dynamodb-local
  - serverless-offline


functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get
  createPost:
    handler: createPost.createPost
    events:
      - httpApi:
          path: /
          method: post

resources:
  Resources:
    postTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy : Retain
      Properties:
        TableName: ${self:service}-postTable-${sls:stage}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

package:
  exclude:
    - node_modules/dynamodb-localhost/**
    - node_modules/serverless-dynamodb-local/**
    - node_modules/serverless-offline/**